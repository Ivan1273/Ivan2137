////////////////////////////////////////////////////////////////////////////////
// 
//  
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Универсальная процедура, которая вычисляет минимум или максимум
//
// Параметры
//  Пар1  - Число - параметр Число
//  Пар2  -Число - параметр Число
//  ВидОперации  -Строка - Строка с названием операции
//  Результат  -Число - Результат выполненной операции
//
Процедура ВыполнениеОперации(пар1, пар2, ВидОперации, Результат) Экспорт
	
	Если ВидОперации = "Максимум" Тогда
		Результат = Макс(пар1, пар2);
	ИначеЕсли ВидОперации = "Минимум" Тогда 
		Результат = Мин(пар1, пар2);
	КонецЕсли;
	
КонецПроцедуры

// Процедура выполняет умножение векторов
//
// Параметры
//  ТСтрока  - ТаблицаЗначений - таблица строка
//  ТСтолбец  - ТаблицаЗначений - Таблица столбец
//
Процедура ВыполнитьРасчет(ТСтрока, ТСтолбец, Адрес) Экспорт 
	// результат будем возвращать в виде структуры
	Результатфункции = Новый Структура("Выполнено, Данные, ОписаниеОшибки", Ложь);
	
	Попытка
	
		ТРезультат = Новый ТаблицаЗначений; // сюда запишем результаты умножения
		ТипСтрокиТаблицы = Новый ОписаниеТипов("Число");
		
		// Формируем таблицу
		Для Счетчик = 1 По ТСтолбец.Количество() Цикл
			ИмяКолонки = "СтолбецРезультат" + Счетчик;
			ТРезультат.Колонки.Добавить(ИмяКолонки, ТипСтрокиТаблицы, ИмяКолонки);
			ТРезультат.Добавить();
		КонецЦикла;
		
		// Заполним таблицу ТРезультат
		Для Строка = 0 По ТСтрока.Колонки.Количество() - 1 Цикл
			
			Для Столбец = 0 По ТСтолбец.Количество() - 1 Цикл
				ТРезультат[Столбец][Строка] = ТСтолбец[Столбец][0] * ТСтрока[0][Строка]; // перемножаем столбец на строку
			КонецЦикла;
			
		КонецЦикла;
		
		// Записываем результат в Структуру
		Результатфункции.Выполнено = Истина;
		Результатфункции.Данные = ТРезультат;
	Исключение
		// Описание ошибки
		Ошибка = ИнформацияОбОшибке();
		Результатфункции.ОписаниеОшибки = Ошибка.Описание;
	КонецПопытки;
	
	// Помещаем результат во временное хранилище
	ПоместитьВоВременноеХранилище(Результатфункции, Адрес);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти
