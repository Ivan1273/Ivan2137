
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	СостояниеПроцесса = "Начало";
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьВидимостьДоступность()
КонецПроцедуры 

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_ИмяТаблицыФормы

&НаКлиенте
Процедура СписокВопросовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	// При выборе вопроса заполняем реквизит формы СписокОтветов и выводим на форму
	ЗаполнитьОтветыВопроса(ВыбраннаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура СписокОтветовВопросаПометкаПриИзменении(Элемент)
	// при выборе ответа нужно проверить параметр МножественныйВыбор
	ПараметрыВопроса = Модель.НайтиПоИдентификатору(ТекущийВопросИндентификатор);
	
	Если Не ПараметрыВопроса.МножественныйВыбор Тогда
	// Если МНожественныйВыбор Ложь то можно выбрать только один ответ и снять другие пометки
		ТекущаяСтрока = Элементы.СписокОтветовВопроса.ТекущаяСтрока;
		ЭлементСписка = СписокОтветовВопроса.НайтиПоИдентификатору(ТекущаяСтрока); // по номеру строки в таблице формы находим ответ
		
		Если ЭлементСписка.Пометка Тогда
		// если пометку установили в Истину то убираем все галочки
			СписокОтветовВопроса.ЗаполнитьПометки(Ложь);
			// устанавливаем текущую пометку в Истина
			ЭлементСписка.Пометка = Истина;
		КонецЕсли; 
		
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура НачатьТестирование(Команда)
	СостояниеПроцесса = "НачатьТестирование";
	УстановитьВидимостьДоступность();
	
	// Далее нужно заполнить модель. Сделаем отдельной процедурой ЗаполнитьМодель()
	ЗаполнитьМодель();
	
	// Далее вопросы из модели нужно вывести на форму, то есть заполнить реквизит формы СписокВопросов
	Для каждого СтрокаМодели Из Модель.ПолучитьЭлементы() Цикл
		СписокВопросов.Добавить(СтрокаМодели.ПолучитьИдентификатор(), СтрокаМодели.Текст);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Ответить(Команда)
	// Получаем из модели вопрос на который отвечаем
	СтрокаВопроса = Модель.НайтиПоИдентификатору(ТекущийВопросИндентификатор);
	СтрокаВопроса.ОтветВыборПользователя = Истина; // заполняем ОтветВыборПользователя
	
	// считываем помеченные элементы списка в массив, содержащий индексэлемента
	МассивИндексовОтветов = Новый Массив;
	ИндексОтвета = 0;
	
	// Если ответ выбран то добавляем в массив  его индекс
	Для каждого ЭлементСписка Из СписокОтветовВопроса Цикл
		Если ЭлементСписка.Пометка Тогда
			МассивИндексовОтветов.Добавить(ИндексОтвета);
		КонецЕсли;
		ИндексОтвета = ИндексОтвета + 1;
	КонецЦикла; 
	
	ТекущаяСтрокаМодели = Модель.НайтиПоИдентификатору(ТекущийВопросИндентификатор);
	// Получаем ответы на текущего вопроса
	ЭлементыСтроки = ТекущаяСтрокаМодели.ПолучитьЭлементы();
	Индекс = 0;
	
	// заполняем ответы пользователя
	Для каждого Элемент Из ЭлементыСтроки Цикл
	
		Если МассивИндексовОтветов.Найти(Индекс) = Неопределено Тогда
			Элемент.ОтветВыборПользователя = Ложь;
		иначе
			Элемент.ОтветВыборПользователя = Истина;
		КонецЕсли;
		
		Индекс = Индекс + 1;
	КонецЦикла;
	
	// Если на вопрос дан ответ то удалить этот вопрос из списка вопросов
	Для каждого ЭлементСпискаВопросов Из СписокВопросов Цикл
	
		Если ЭлементСпискаВопросов.Значение = ТекущийВопросИндентификатор Тогда
			СписокВопросов.Удалить(ЭлементСпискаВопросов);
			Прервать;
		КонецЕсли;
	
	КонецЦикла;
	
	// Если в списке вопросов еще есть вопросы позиционируемся на следующем вопросе
	Если СписокВопросов.Количество() > 0 Тогда
		ТекущийВопросИндентификатор = СписокВопросов[0].ПолучитьИдентификатор(); // записали идентификатор следующего вопроса
		Элементы.СписокВопросов.ТекущаяСтрока = ТекущийВопросИндентификатор; // присвоили текущей строке полученный идентификатор
		
		// выводим ответы вопроса на котором спозиционировались
		ЗаполнитьОтветыВопроса(ТекущийВопросИндентификатор);
	Иначе 
		// вопросы закончились
		СписокОтветовВопроса.Очистить();
		ТекущийВопросТекст = "";
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакончитьТестирование(Команда)
	СостояниеПроцесса = "ЗакончитьТестирование";
	
	// Проверим, есть ли вопросы без ответов
	КоличествоВопросовБезОтвета = КоличествоВопросовБезОтвета();
	
	Если КоличествоВопросовБезОтвета > 0 Тогда  // остались вопросы без ответа
		Cообщение = Новый СообщениеПользователю; // сообщим об этом пользователю
		Cообщение.ПутьКДанным = "СписокВопросов";
		ФорматнаяСтрока = ";%1 вопрос;;%1 вопроса;%1 вопросов;%1 вопроса";
		Cообщение.Текст = СтрШаблон("Вы еще не ответили на %1!", СтрокаСЧислом(
			// параметр содержит перечисленные через 
			// точку с запятой 6 форм строки 
			// для каждой категории числительного:
			// Ноль, Один, Два, Немного, Много, Другое       
			// Для русского (ru), белорусского (be) и украинского (uk) языков: 
			//"; день; ; дня; дней; дня
			ФорматнаяСтрока,
			КоличествоВопросовБезОтвета,
			ВидЧисловогоЗначения.Количественное));
		Cообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	УстановитьВидимостьДоступность();
	// заполняем параметры модели по результатам ответов на вопросы
	РассчитатьМодель();
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = "Спасибо.Тестирование завершено.";
	Сообщение.Сообщить();
КонецПроцедуры

&НаКлиенте
Процедура Печать(Команда)
	СостояниеПроцесса = "Распечатан";
	УстановитьВидимостьДоступность();
	// выводим табличный документ результата теста
	ТабДок = ПечатьНаСервере();
	
	//установим параметры отображения табличного документа
	ТабДок.ТолькоПросмотр = Истина;
	ТабДок.ОтображатьЗаголовки = Истина;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДОк.Показать("Показать результаты тестирования");
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановитьВидимостьДоступность()
	 // Настройка формы в зависимости от состояния процесса
	Если СостояниеПроцесса = "Начало" Тогда
		Элементы.ФормаЗакончитьТестирование.Доступность = Ложь;
		Элементы.ФормаПечать.Доступность = Ложь;
	ИначеЕсли СостояниеПроцесса = "НачатьТестирование" Тогда
		Элементы.ФормаНачатьТестирование.Доступность = Ложь;
		Элементы.ФормаЗакончитьТестирование.Доступность = Истина;
	ИначеЕсли СостояниеПроцесса = "ЗакончитьТестирование" Тогда
		Элементы.ФормаЗакончитьТестирование.Доступность = Ложь;
		Элементы.ФормаПечать.Доступность = Истина;
		Элементы.ФормаНачатьТестирование.Доступность = Ложь;
	ИначеЕсли СостояниеПроцесса = "Распечатан" Тогда 
		Элементы.ФормаЗакончитьТестирование.Доступность = Ложь;
		Элементы.ФормаПечать.Доступность = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьМодель()
	// Модель заполняем вручную
	// тестовые данные надо подобрать так, чтобы отработать все варианты
	// МножественныйВыбор - Истина
	// - РежимТрактовки - Истина
	// - РежимТрактовки - Ложь    
	// МножественныйВыбор - Ложь
	
	Дерево = РеквизитФормыВЗначение("Модель"); // получаем наше ДеревоЗначений
	// Заполняем ДеревоЗначений вопросами и ответами
	// Вопрос1
	Вопрос1 = Дерево.Строки.Добавить();
	Вопрос1.Текст = "Столица России?";
	вопрос1.РежимТрактовки = Истина;
	Вопрос1.МножественныйВыбор = Ложь;
	
	// Ответы к вопросу добавляем как подстроки к вопросу
	Ответ0 = Вопрос1.Строки.Добавить();
	Ответ0.Текст = "Париж";
	Ответ0.ОтветВерный = Ложь;
	Ответ0.ОтветВыборПользователя = Ложь;
	
	Ответ1 = Вопрос1.Строки.Добавить();
	Ответ1.Текст = "Рим";
	Ответ1.ОтветВерный = Ложь;
	Ответ1.ОтветВыборПользователя = Ложь;
	
	Ответ2 = Вопрос1.Строки.Добавить();
	Ответ2.Текст = "Москва";
	Ответ2.ОтветВерный = Истина;
	Ответ2.ОтветВыборПользователя = Ложь;
	
	//Вопрос2
	Вопрос2 = Дерево.Строки.Добавить();
	Вопрос2.Текст = "Куда указывает стрелка компаса?";
	Вопрос2.РежимТрактовки = Истина;
	Вопрос2.МножественныйВыбор = Истина;
	
	// Ответы для второго вопроса создаем в подстроках для вопроса2
	Ответ0 = Вопрос2.Строки.Добавить();
	Ответ0.Текст = "Юг";
	Ответ0.ОтветВерный = Ложь;
	Ответ0.ОтветВыборПользователя = Ложь;
	
	Ответ1 = Вопрос2.Строки.Добавить();
	Ответ1.Текст = "Запад";
	Ответ1.ОтветВерный = Ложь;
	Ответ1.ОтветВыборПользователя = Ложь;
	
	Ответ2 = Вопрос2.Строки.Добавить();
	Ответ2.Текст = "Север";
	Ответ2.ОтветВерный = Истина;
	Ответ2.ОтветВыборПользователя = Ложь;
	
	// Вопрос3
	Вопрос3 = Дерево.Строки.Добавить();
	Вопрос3.Текст = "Сколько пальцев на руке?";
	Вопрос3.МножественныйВыбор = Ложь;
	Вопрос3.МножественныйВыбор = Истина;
	
	// Ответы
	Ответ0 = Вопрос3.Строки.Добавить();
	Ответ0.Текст = "Меньше пяти";
	Ответ0.ОтветВерный = Ложь;
	Ответ0.ОтветВыборПользователя = Ложь;
	
	Ответ1 = Вопрос3.СТроки.Добавить();
	Ответ1.Текст = "Пять";
	Ответ1.ОтветВерный = Истина;
	Ответ1.ОтветВыборПользователя = Ложь;
	
	Ответ2 = Вопрос3.СТроки.Добавить();
	Ответ2.Текст = "Меньше десяти";
	Ответ2.ОтветВерный = Истина;
	Ответ2.ОтветВыборПользователя = Ложь;
	
	// Возвращаем данные на форму
	ЗначениеВРеквизитФормы(Дерево, "Модель");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьОтветыВопроса(ВыбраннаяСтрока)
	// В выбранной строке получаем число,которое является идентификатором вопроса в нашей модели. 
	// Его мы записали в параметр Значение в СписокВопросов при выводе вопросов
	СтрокаСписка = СписокВопросов.НайтиПоИдентификатору(ВыбраннаяСтрока); // по идентификатору нашли вопрос выбранный на форме в СписокВопросов
	
	// Найдем вопрос в нашей модели
	СтрокаВопроса = Модель.НайтиПоИдентификатору(СтрокаСписка.Значение);
	// Записываем Идентификатор вопроса в реквизит формы
	ТекущийВопросИндентификатор = СтрокаВопроса.ПолучитьИдентификатор();
	// Записываем вопрос в реквизит формы
	ТекущийВопросТекст = СтрокаВопроса.Текст;
	СписокОтветовВопроса.Очистить();
	
	// Заполняем ответами СписокОтветовВопроса
	Для каждого СтрокаОтвета Из СтрокаВопроса.ПолучитьЭлементы() Цикл
		СписокОтветовВопроса.Добавить(СтрокаОтвета.ПолучитьИдентификатор(), СтрокаОтвета.Текст);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция КоличествоВопросовБезОтвета()
	Перем КоличествоВопросовБезОтвета, СтрокаМодели;
	КоличествоВопросовБезОтвета = 0;
	
	Для каждого СтрокаМодели Из Модель.ПолучитьЭлементы() Цикл
		Если СтрокаМодели.ОтветВыборПользователя Тогда
			Продолжить;
		КонецЕсли;
		КоличествоВопросовБезОтвета = КоличествоВопросовБезОтвета + 1;
	КонецЦикла;
	
	Возврат КоличествоВопросовБезОтвета;
КонецФункции

&НаКлиенте
Процедура РассчитатьМодель()
	Перем ВопросМодели, ОтветНавопрос;
	// обходим модель
	
	// РежимТрактовки - истина, если правильным считается "хотя бы один верный ответ"
	// ложь - если правильным считается ответ со всеми выбранными корректными вариантами
	// Заполняем параметр модели ОтвеченоВерно
	Для каждого ВопросМодели Из Модель.ПолучитьЭлементы() Цикл
		Для каждого ОтветНаВопрос Из ВопросМодели.ПолучитьЭлементы() Цикл
			// заполняем ОтвеченоВерно
			Если ОтветНаВопрос.ОтветВерный = ОтветНаВопрос.ОтветВыборПользователя И ОтветНаВопрос.ОтветВерный = Истина Тогда
				ВопросМодели.ОтвеченоВерно = Истина;
			КонецЕсли;
			
			// Учитываем МножественныйВыбор и РежимТрактовки
			Если ВопросМодели.МножественныйВыбор = Истина И ВопросМодели.РежимТрактовки = Ложь Тогда
			
				Если ОтветНаВопрос.ОтветВерный = Истина И ОтветНаВопрос.ОтветВыборПользователя = Ложь Тогда
					ВопросМодели.ОтвеченоВерно = Ложь;
					Продолжить;
				КонецЕсли;
			
			КонецЕсли;
		
		КонецЦикла;
		
	КонецЦикла;
КонецПроцедуры 

&НаСервере
функция ПечатьНаСервере()
	ТабДок = Новый ТабличныйДокумент; // создали табличный документ
	Макет = Обработки.Обработка1.ПолучитьМакет("Макет"); // получили макет таблицы, который создали
	
	// Выводим шапку
	Шапка = Макет.ПолучитьОбласть("Шапка");
	ТабДок.Вывести(Шапка);
	
	// Получаем область строки табличной части
	ТабличнаяЧастьСтрока = Макет.ПолучитьОбласть("Строка");
	// Получаем параметры области
	ПараметрыСтроки = ТабличнаяЧастьСтрока.Параметры;
	ПараметрыСтроки.НомерСтроки = 0;
	
	// создадим временные переменные для расчеты количества правильных вопросов и сколько всего вопросов
	КоличествоВсегоВопросов = 0;
	КоличествоПравильныхВопросов = 0;
	
	// Получим ДеревоЗначений нашей Модели
	МодельДерево = РеквизитФормыВЗначение("Модель");
	
	// Обходим дерево и получаем данные из модели для вывода в таблицу
	Для каждого ВопросМодели Из МодельДерево.Строки Цикл
		КоличествоВсегоВопросов = КоличествоВсегоВопросов + 1; // счетчик вопросов увеличиваем
		// Если на вопрос ответ верный увеличиваем счетчик правильных ответов
		Если ВопросМодели.ОтвеченоВерно Тогда
			КоличествоПравильныхВопросов = КоличествоПравильныхВопросов + 1;
		КонецЕсли;
		
		// Выводим параметры вопросов
		ПараметрыСтроки.ВопросТеста = СокрЛП(ВопросМодели.Текст); // получаем текст вопроса
		ПараметрыСтроки.РежимПроверки = ВопросМодели.МножественныйВыбор;
		ПараметрыСтроки.ОтвеченоВерно = ВопросМодели.ОтвеченоВерно;
		
		// Создадим массивы для правильных ответов и для ответов пользователя 
		// Далее выведем содержимое массив в ячейку таблицы
		ОтветыПользователя = Новый Массив;
		ПравильныеОтветы = Новый Массив;
		
		// Заполним массивы
		Для каждого ОтветНаВопрос Из ВопросМодели.Строки Цикл
			Если ОтветНаВопрос.ОтветВыборПользователя Тогда
				// Если пользователь выбрал текущий ответ, добавим его в массив
				ОтветыПользователя.Добавить(ОтветНаВопрос.Текст);
			КонецЕсли;
			
			Если ОтветНаВопрос.ОтветВерный Тогда
			// Если ответ правильный то добавляем в массив
				ПравильныеОтветы.Добавить(ОтветНаВопрос.Текст);
			КонецЕсли;
		КонецЦикла;
		
		// содержимое массивов выведем в ячейки таблицы
		ПараметрыСтроки.ПравильныеОтветы = СтрСоединить(ПравильныеОтветы, ",");
		ПараметрыСтроки.ОтветыПользователя = СтрСоединить(ОтветыПользователя, ",");
		// Увеличим номер строки
		ПараметрыСтроки.НомерСтроки = ПараметрыСтроки.НомерСтроки + 1;
		
		// Выведем заполненную строку таблицы
	ТабДок.Вывести(ТабличнаяЧастьСтрока);
	КонецЦикла; 
	
	// Выведем Итоги
	Итого = Макет.ПолучитьОбласть("Итого"); // получим именованную ячейку
	// получим параметры итогов
	ПараметрыИтого = Итого.Параметры;
	// Заполним параметры
	ПараметрыИтого.КолПро = КоличествоПравильныхВопросов;
	ПараметрыИтого.КолВсего = КоличествоВсегоВопросов;
	
	// Выводим итоги
	ТабДок.Вывести(Итого);
	Возврат ТабДок;

КонецФункции

#КонецОбласти

#Область Инициализация

#КонецОбласти