
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// Програмно создадим реквизиты и элементы
	СписокЗадач = Новый Массив;
	СписокЗадачПереопределяемый(СписокЗадач);
	
	// Создаем группу для страниц
	СтраницыФормы = ЭтаФорма.Элементы.Добавить("СтраницыФормы", Тип("ГруппаФормы"), ЭтаФорма);
	СтраницыФормы.Вид = ВидГруппыФормы.Страницы;
	СтраницыФормы.отображениестраниц = ОтображениеСтраницФормы.ЗакладкиСлеваГоризонтально;
	
	// Для каждой задачи из списка задач создадим стриницу, реквизиты и элементы формы
	Для каждого Задача Из СписокЗадач Цикл
		// Имя страницы такое же как имя задачи
		НоваяСтраница = ЭтаФорма.Элементы.Добавить(Задача.Имя, Тип("ГруппаФормы"), СтраницыФормы);
		НоваяСтраница.Вид = ВидГруппыФормы.Страница;
		НоваяСтраница.Заголовок = Задача.Заголовок;
		
		//Добавим декорацию с описанием задачи
		НовыйЭлемент = Элементы.Добавить("Описание" + Задача.Имя, Тип("ДекорацияФормы"), НоваяСтраница);
		НовыйЭлемент.Вид = ВидДекорацииФормы.Надпись;
		НовыйЭлемент.Заголовок = Задача.Описание;
		
		МассивОписанияРеквизитов = Новый Массив;
		//  Для текущей задачи создаем описание реквизитов
		Выполнить(Задача.Имя + "ОписаниеРеквизитов(МассивОписанияРеквизитов);");
		
		// Из МассивОписанияРеквизитов нужно взять только реквизиты и записать в новый массив
		МассивРеквизитов = Новый Массив;
		// Изменяем имя реквизита путем добавление к имени имя текущей задачи
		Для каждого ОписаниеРеквизита Из МассивОписанияРеквизитов Цикл
			ОписаниеРеквизита.Реквизит.Имя = "" + Задача.Имя + ОписаниеРеквизита.Реквизит.Имя;
			МассивРеквизитов.Добавить(ОписаниеРеквизита.Реквизит);
		КонецЦикла;
		// Добавляем созданные реквизиты на форму
		ИзменитьРеквизиты(МассивРеквизитов);
		
		// Создаем элементы формы
		Для каждого ОписаниеРеквизита Из МассивОписанияРеквизитов Цикл
			Если Не ОписаниеРеквизита.СоздаватьЭлементФормы Тогда
				Продолжить;
			КонецЕсли;
			
			НовыйЭлемент = Элементы.Добавить(ОписаниеРеквизита.Реквизит.Имя, Тип("ПолеФормы"), НоваяСтраница);
			НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
			НовыйЭлемент.ПутьКДанным = ОписаниеРеквизита.Реквизит.Имя;
			НовыйЭлемент.ТолькоПросмотр = ОписаниеРеквизита.ТолькоПросмотр;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	ИмяТекущейСтраницы = ЭтаФорма.ПодчиненныеЭлементы.СтраницыФормы.ТекущаяСтраница.Имя;
	ЭлементыСтраницы = Элементы[ИмяТекущейСтраницы].ПодчиненныеЭлементы;
	
	Для каждого ЭлементФормы Из ЭлементыСтраницы Цикл
		Если НеобходимаПроверкаЗаполнения(ЭлементФормы) Тогда
			ПроверяемыеРеквизиты.Добавить(ЭлементФормы.ПутьКДанным);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_ИмяТаблицыФормы

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Решить(Команда)
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ИсходныйКод = Элементы.СтраницыФормы.ТекущаяСтраница.Имя;
	Выполнить(ИсходныйКод + "Выполнить()");
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОписаниеРеквизитовЗаданий

// Реквизиты для первого задания
&НаСервере
Функция Задание1ОписаниеРеквизитов(МассивРеквизитов)
	ТипыРеквизитов = Новый Массив;
	ТипыРеквизитов.Добавить(Тип("Строка"));
	ДобавитьВМассивМассивРеквизитов(МассивРеквизитов, Новый РеквизитФормы("Реквизит1", Новый ОписаниеТипов(ТипыРеквизитов),, "Переменная А"), Истина);
	ДобавитьВМассивМассивРеквизитов(МассивРеквизитов, Новый РеквизитФормы("Реквизит2", Новый ОписаниеТипов(ТипыРеквизитов),, "Переменная В"), Истина);
	ДобавитьВМассивМассивРеквизитов(МассивРеквизитов, Новый РеквизитФормы("Буфер", Новый ОписаниеТипов(ТипыРеквизитов),,), Ложь);
КонецФункции

&НаСервере
Функция Задание2ОписаниеРеквизитов(МассивРеквизитов) 
	ТипыРеквизитов = Новый Массив;
	ТипыРеквизитов.Добавить(Тип("Строка"));

	ДобавитьВМассивМассивРеквизитов(МассивРеквизитов, Новый РеквизитФормы("Реквизит1", Новый ОписаниеТипов(ТипыРеквизитов),, "Строка"), Истина);
	ДобавитьВМассивМассивРеквизитов(МассивРеквизитов, Новый РеквизитФормы("Реквизит2", Новый ОписаниеТипов(ТипыРеквизитов),, "Результат"), Истина, Истина);
КонецФункции

&НаСервере
Функция ЗадачаМассивОписаниеРеквизитов(МассивРеквизитов)
	
	ДобавитьВМассивМассивРеквизитов(МассивРеквизитов, Новый РеквизитФормы("КоличествоЭлементов", 
											Новый ОписаниеТипов("Число"),, "Количество элементов"), Истина);
	ДобавитьВМассивМассивРеквизитов(МассивРеквизитов, Новый РеквизитФормы("МассивВСтроку", 
											Новый ОписаниеТипов("Строка"),, "Сгенерированный массив"), Истина, Истина);
КонецФункции 

&НаСервере
Функция ЗадачаМассив1ОписаниеРеквизитов(МассивРеквизитов)
	
	ДобавитьВМассивМассивРеквизитов(МассивРеквизитов, Новый РеквизитФормы("КоличествоЭлементов", 
											Новый ОписаниеТипов("Число"),, "Количество элементов"), Истина);
	ДобавитьВМассивМассивРеквизитов(МассивРеквизитов, Новый РеквизитФормы("МассивВСтроку", 
											Новый ОписаниеТипов("Строка"),, "Сгенерированный массив"), Истина, Истина);
	ДобавитьВМассивМассивРеквизитов(МассивРеквизитов, Новый РеквизитФормы("ЭлементМассива", 
											Новый ОписаниеТипов("Строка"),, "Результат"), Истина, Истина);
КонецФункции 

&НаСервере
Функция ЗадачаМассив2ОписаниеРеквизитов(МассивРеквизитов)
	
	ДобавитьВМассивМассивРеквизитов(МассивРеквизитов, Новый РеквизитФормы("КоличествоЭлементов", 
											Новый ОписаниеТипов("Число"),, "Количество элементов"), Истина);
	ДобавитьВМассивМассивРеквизитов(МассивРеквизитов, Новый РеквизитФормы("МассивВСтроку", 
											Новый ОписаниеТипов("Строка"),, "Сгенерированный массив"), Истина, Истина);
	ДобавитьВМассивМассивРеквизитов(МассивРеквизитов, Новый РеквизитФормы("Реквизит1", 
											Новый ОписаниеТипов("Строка"),, "Первый максимальный"), Истина, Истина);
	ДобавитьВМассивМассивРеквизитов(МассивРеквизитов, Новый РеквизитФормы("Реквизит2", 
											Новый ОписаниеТипов("Строка"),, "Второй максимальный"), Истина, Истина);
КонецФункции 

#КонецОбласти

#Область ЗаданияПоНомерам

// Имя процедуры формируется из имени задачи + Выполнить
&НаКлиенте
Процедура Задание1Выполнить()
	ЭтаФорма["Задание1Буфер"] = ЭтаФорма["Задание1Реквизит1"];
	ЭтаФорма["Задание1Реквизит1"] = ЭтаФорма["Задание1Реквизит2"];
	ЭтаФорма["Задание1Реквизит2"] = ЭтаФорма["Задание1Буфер"];
КонецПроцедуры

&НаКлиенте
Процедура Задание2Выполнить()
	ДлинаЗначения = СтрДлина(ЭтаФорма["Задание2Реквизит1"]);
	ЗначениеПереворота = "";
	
	Для Индекс = 0 По ДлинаЗначения Цикл
		
		Если ДлинаЗначения - Индекс = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Значение = Сред(ЭтаФорма["Задание2Реквизит1"], ДлинаЗначения - Индекс, 1);
		ЗначениеПереворота = ЗначениеПереворота + Значение;
		
	КонецЦикла;
	ЭтаФорма["Задание2Реквизит2"] = ЗначениеПереворота;
КонецПроцедуры

&НаКлиенте
Процедура ЗадачаМассивВыполнить()
	ЭлементыМассива = Новый Массив;
	СписокЭлементов = Новый СписокЗначений;
	ГСЧ = Новый ГенераторСлучайныхЧисел;
	
	Для Индекс = 1 По ЭтаФорма["ЗадачаМассивКоличествоЭлементов"] Цикл
		ЭлементыМассива.Добавить(ГСЧ.СлучайноеЧисло(1, 100)); // заполняем массив случайными числами
	КонецЦикла;
	
	СписокЭлементов.ЗагрузитьЗначения(ЭлементыМассива); // Загружаем случайные числа из массива в список значений
	СписокЭлементов.СортироватьПоЗначению(НаправлениеСортировки.Убыв); // сортируем числа 
	ЭлементыМассива = СписокЭлементов.ВыгрузитьЗначения(); // отсортированные числа загружаем обратно в массив
	ЭтаФорма["ЗадачаМассивМассивВСтроку"] = СтрСоединить(ЭлементыМассива, ", ");
КонецПроцедуры

&НаКлиенте
Процедура ЗадачаМассив1Выполнить()
	ЭлементыМассива = Новый Массив;
	ГСЧ = Новый ГенераторСлучайныхЧисел;
	
	Для Индекс = 1 По ЭтаФорма["ЗадачаМассив1КоличествоЭлементов"] Цикл
		ЭлементыМассива.Добавить(ГСЧ.СлучайноеЧисло(1, 100)); // заполняем массив случайными числами
	КонецЦикла;
	
	ЭтаФорма["ЗадачаМассив1МассивВСтроку"] = СтрСоединить(ЭлементыМассива, ", ");
	
	Для каждого Элемент Из ЭлементыМассива Цикл
	
		Если Элемент > 0 Тогда
			ЭтаФорма["ЗадачаМассив1ЭлементМассива"] = СтрШаблон("Индекс: %1, Значение: %2", ЭлементыМассива.Найти(Элемент), Элемент);
			Прервать;
		КонецЕсли;
	
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ЗадачаМассив2Выполнить()
	ЭлементыМассива = Новый Массив;
	ГСЧ = Новый ГенераторСлучайныхЧисел;
	
	Для Индекс = 1 По ЭтаФорма["ЗадачаМассив2КоличествоЭлементов"] Цикл
		ЭлементыМассива.Добавить(ГСЧ.СлучайноеЧисло(1, 100)); // заполняем массив случайными числами
	КонецЦикла;
	
	ЭтаФорма["ЗадачаМассив2МассивВСтроку"] = СтрСоединить(ЭлементыМассива, ", ");
	МаксЗначение1 = 0;
	МаксЗначение2 = 0;
	
	Для каждого Элемент Из ЭлементыМассива Цикл
		МаксЗначение1 = Макс(МаксЗначение1, Элемент);
	КонецЦикла;
	
	Для каждого Элемент Из ЭлементыМассива Цикл
		
		Если Элемент = МаксЗначение1 Тогда
			Продолжить;
		КонецЕсли;
		
		МаксЗначение2 = Макс(МаксЗначение2, Элемент);
	КонецЦикла;
	
	ЭтаФорма["ЗадачаМассив2Реквизит1"] = МаксЗначение1;
	ЭтаФорма["ЗадачаМассив2Реквизит2"] = МаксЗначение2;
КонецПроцедуры

#КонецОбласти

&НаСервере
Функция НеобходимаПроверкаЗаполнения(ЭлементФормы)
	
	Если (ТипЗнч(ЭлементФормы) = Тип("ПолеФормы") Или ТипЗнч(ЭлементФормы) = Тип("ТаблицаФормы"))
								И Не ЭлементФормы.ТолькоПросмотр Тогда
		Возврат Истина;
	Иначе 
		Возврат Ложь; 
	КонецЕсли;
	
КонецФункции

// Добавим наши задачи в массив СписокЗадач
&НаСервереБезКонтекста
Процедура СписокЗадачПереопределяемый(СписокЗадач)
	ДобавитьВСписокЗадач(СписокЗадач, "Задание1", "Обмен значений двух переменных",
		"С клавиатуры вводятся два числа, каждое из которых присваивается своей переменной.
		|После этого программа должна сама выполнять обмен значений переменных,
		|то есть первой присваивать значение второй, а второй - значение первой;
		|в конце выводить значения измененных переменных на экран.");
	
	ДобавитьВСписокЗадач(СписокЗадач, "Задание2", "Переворот строки", 
								"Перевернуть строку, то есть последние символы должны стать первыми, а первые последними.");
	
	ДобавитьВСписокЗадач(СписокЗадач, "ЗадачаМассив", "Вывод сгенерированного массива",
		"Есть массив, заполненный случайными числами. 
		|Количество элементов массива задаётся пользователем. 
		|Необходимо отсортировать массив по убыванию 
		|и вывести его в строку вида: ""эл1 эл2 эл3""");
	//
	ДобавитьВСписокЗадач(СписокЗадач, "ЗадачаМассив1", "Первый положительный элемент массива",
		"Найти номер и значение первого положительного элемента массива.");
	//
	ДобавитьВСписокЗадач(СписокЗадач, "ЗадачаМассив2", "Найти два максимальных элемента массива",
		"В массиве чисел найти два максимальных элемента.
		|При этом они могут быть как равны между собой, так и различаться");

КонецПроцедуры 

// Процедура будет добавлять в массив СписокЗадач описание заданий
&НаСервереБезКонтекста
Процедура ДобавитьВСписокЗадач(СписокЗадач, ИмяЗадачи, ЗаголовокСтраницы, Описание)
	// Сначала создаем структуру с описанием задачи и записываем его в массив
	ОписаниеЗадачи = Новый Структура;
	ОписаниеЗадачи.Вставить("Имя", ИмяЗадачи);
	ОписаниеЗадачи.Вставить("Заголовок", ЗаголовокСтраницы);
	ОписаниеЗадачи.Вставить("Описание", Описание);
	СписокЗадач.Добавить(ОписаниеЗадачи);
	
КонецПроцедуры

// Процедура будет добавлять в массив МассивРеквизитов структуры с описанием реквизитов
&НаСервереБезКонтекста
Процедура ДобавитьВМассивМассивРеквизитов(МассивРеквизитов, РеквизитФормы, СоздаватьЭлементФормы, ТолькоПросмотр = Ложь)
	ОписаниеРеквизита = Новый Структура;
	ОписаниеРеквизита.Вставить("Реквизит", РеквизитФормы);
	ОписаниеРеквизита.Вставить("СоздаватьЭлементФормы", СоздаватьЭлементФормы);
	ОписаниеРеквизита.Вставить("ТолькоПросмотр", ТолькоПросмотр);
	МассивРеквизитов.Добавить(ОписаниеРеквизита);
КонецПроцедуры


#КонецОбласти

